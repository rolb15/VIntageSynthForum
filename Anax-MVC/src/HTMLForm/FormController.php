<?php
 namespace Anax\HTMLForm; class FormController { use \Anax\DI\TInjectionAware, \Anax\MVC\TRedirectHelpers; public function indexAction() { $this->di->session(); $form = $this->di->form->create([], [ 'name' => [ 'type' => 'text', 'label' => 'Name of contact person:', 'required' => true, 'validation' => ['not_empty'], ], 'email' => [ 'type' => 'text', 'required' => true, 'validation' => ['not_empty', 'email_adress'], ], 'phone' => [ 'type' => 'text', 'required' => true, 'validation' => ['not_empty', 'numeric'], ], 'submit' => [ 'type' => 'submit', 'callback' => [$this, 'callbackSubmit'], ], 'submit-fail' => [ 'type' => 'submit', 'callback' => [$this, 'callbackSubmitFail'], ], ]); $form->check([$this, 'callbackSuccess'], [$this, 'callbackFail']); $this->di->theme->setTitle("Testing CForm with Anax"); $this->di->views->add('default/page', [ 'title' => "Try out a form using CForm", 'content' => $form->getHTML() ]); } public function callbackSubmit($form) { $form->AddOutput("<p>DoSubmit(): Form was submitted.<p>"); $form->AddOutput("<p>Do stuff (save to database) and return true (success) or false (failed processing)</p>"); $form->AddOutput("<p><b>Name: " . $form->Value('name') . "</b></p>"); $form->AddOutput("<p><b>Email: " . $form->Value('email') . "</b></p>"); $form->AddOutput("<p><b>Phone: " . $form->Value('phone') . "</b></p>"); $form->saveInSession = true; return true; } public function callbackSubmitFail($form) { $form->AddOutput("<p><i>DoSubmitFail(): Form was submitted but I failed to process/save/validate it</i></p>"); return false; } public function callbackSuccess($form) { $form->AddOUtput("<p><i>Form was submitted and the callback method returned true.</i></p>"); $this->redirectTo(); } public function callbackFail($form) { $form->AddOutput("<p><i>Form was submitted and the Check() method returned false.</i></p>"); $this->redirectTo(); } } 